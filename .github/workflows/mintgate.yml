name: Mintgate CI

on:
  # We want to trigger the build & test pipelines in every branch.
  push:
    # But do no run the pipeline when only `md` files are modified.
    paths-ignore:
      - '**.md'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # Enables color display for `cargo`
  CARGO_TERM_COLOR: always

  # Enables color display for js cli app (based on `chalk`)
  FORCE_COLOR: 1

jobs:

  build-contracts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry/cache
          ~/.cargo/registry/index
          target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('Cargo.lock') }}
    - run: rustup target add wasm32-unknown-unknown
    - run: cargo build --target wasm32-unknown-unknown --release

  check-bindings:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-check-${{ hashFiles('Cargo.lock') }}
    - run: cargo install near-syn --version 0.2.15
    - run: yarn ts:contracts
    - run: git --no-pager diff --exit-code src/mg-nft.ts src/mg-market.ts

  unit-test-contracts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry/cache
          ~/.cargo/registry/index
          target
        key: ${{ runner.os }}-cargo-unit-test-${{ hashFiles('Cargo.lock') }}
    - run: cargo test --package mg-core --package mg-nft --package mg-market

  sim-test-contracts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry/cache
          ~/.cargo/registry/index
          ~/.cargo/registry/src
          target
        key: ${{ runner.os }}-cargo-sim-test-${{ hashFiles('Cargo.lock') }}
    - run: rustup target add wasm32-unknown-unknown
    - run: cargo build --target wasm32-unknown-unknown --release
    - run: cargo test --package mg-sim -- --nocapture

  app-test-contracts:
    needs: [build-contracts, check-bindings]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry/cache
          ~/.cargo/registry/index
          target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('Cargo.lock') }}
    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
    - run: rustup target add wasm32-unknown-unknown
    - run: yarn install --frozen-lockfile
    - run: yarn app-test:contracts

  #- run: cargo metadata --no-deps --format-version 1 > target/wasm32-unknown-unknown/release/metadata.json
  # deploy:
  #   needs: api-test-contract
  #   if: ${{ github.ref == 'refs/heads/master' }}
  #   runs-on: ubuntu-latest
  #   env:
  #     MASTER_ACCOUNT: corgis-nft.testnet
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/cache@v2
  #     with:
  #       path: '**/node_modules'
  #       key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: corgis_nft
  #       path: contract/target/wasm32-unknown-unknown/release

  #   - run: yarn install --frozen-lockfile
  #   - run: SEED_PHRASE="${{ secrets.SEED_PHRASE }}" node ci/deploy.mjs
  #   - run: CONTRACT_NAME=`cat version`.$MASTER_ACCOUNT yarn build:web
  #   - run: git remote set-url origin https://git:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
  #   - run: yarn gh-pages-clean
  #   - run: yarn deploy:web --user "Github Workflow Bot <noemail@epam.github.io>"
