{
	"info": {
		"_postman_id": "26f53a12-2425-4d37-ab10-daec39b7cc03",
		"name": "Mintgate",
		"description": "This Postman collection is intended to be used during the development of the Mintage NFT market (https://github.com/epam/mintgate).\n\nTo be able to make requests from Postman:\n\n1. update your local repo of mintgate project; \n2. install all dependencies:\n```\nyarn\n```\n3. to start api server run in the terminal from mintgate project's root dir:\n```\nyarn near-api-server\n```\n4. import postman collection from `./test/mintgatePostmanCollection.json` file;\n\nThat should be it.\n \nNo changes to bodies of requests needed. \n\nTo make requests where `gate_id` and / or `token_id` are required params (e.g. `buy_token`) send `create_collectible` and `claim_token` first. `gateId` and `tokenId` postman collection variables are created (or updated) from these requests' responses. The variables are used in other requests where `gate_id` and `token_id` are needed. \n\nTo generate new NEAR accounts for test users and contracts:\n1. run \n```\napp-test:contracts:clean\n```\n2. start some tests (if not found NEAR accounts are generated during tests' setup, postman collection file gets updated);\n3. import postman collection from `./test/mintgatePostmanCollection.json` file again.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Nft contract",
			"item": [
				{
					"name": "Errors",
					"item": [
						{
							"name": "ERROR claim_token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const r = pm.response.json();\r",
											"\r",
											"if (r.error) {\r",
											"    console.log(JSON.parse(r.error));\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"claim_token\",\r\n\t\"params\": {\r\n\t\t\"gate_id\": \"non-existent-gate-id\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{serverHost}}:{{serverPort}}/call",
									"protocol": "http",
									"host": [
										"{{serverHost}}"
									],
									"port": "{{serverPort}}",
									"path": [
										"call"
									]
								}
							},
							"response": []
						},
						{
							"name": "ERROR create_collectible",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"const r = pm.response.json();\r",
											"\r",
											"if (r.error) {\r",
											"    console.log(JSON.parse(r.error));\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"account_id\": \"{{alice}}\",\r\n    \"private_key\": \"{{alicePrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"create_collectible\",\r\n\t\"params\": {\r\n\t\t\"gate_id\": \"{{$randomCurrencyCode}}\",\r\n        \"title\": \"{{$randomProductName}}\",\r\n        \"description\": \"{{$randomLoremSentences}}\",\r\n        \"supply\": \"0\",\r\n        \"gate_url\": \"{{$randomUrl}}\",\r\n        \"royalty\": {\r\n            \"num\": 2,\r\n            \"den\": 10\r\n        }\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{serverHost}}:{{serverPort}}/call",
									"protocol": "http",
									"host": [
										"{{serverHost}}"
									],
									"port": "{{serverPort}}",
									"path": [
										"call"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "create_collectible",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const { random } = require('lodash'); \r",
									"\r",
									"const alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r",
									"\r",
									"const generateGateId = () => \r",
									"    Array.from({ length: 12 }, () => alphabet[random(alphabet.length - 1)]).join('');\r",
									"\r",
									"pm.collectionVariables.set(\"gateId\", generateGateId());\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{alice}}\",\r\n    \"private_key\": \"{{alicePrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"create_collectible\",\r\n\t\"params\": {\r\n\t\t\"gate_id\": \"{{gateId}}\",\r\n        \"title\": \"{{$randomProductName}}\",\r\n        \"description\": \"{{$randomLoremSentences}}\",\r\n        \"supply\": 100,\r\n        \"gate_url\": \"{{$randomUrl}}\",\r\n        \"royalty\": {\r\n            \"num\": 2,\r\n            \"den\": 10\r\n        }\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_collectible_by_gate_id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{nft}}\",\r\n\t\"method\": \"get_collectible_by_gate_id\",\r\n\t\"params\": {\r\n\t\t\"gate_id\": \"{{gateId}}\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_collectibles_by_creator",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{nft}}\",\r\n\t\"method\": \"get_collectibles_by_creator\",\r\n\t\"params\": {\r\n\t\t\"creator_id\": \"{{alice}}\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete_collectible",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{alice}}\",\r\n    \"private_key\": \"{{alicePrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"delete_collectible\",\r\n\t\"params\": {\r\n\t\t\"gate_id\": \"{{gateId}}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "claim_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const tokenId = JSON.parse((Buffer.from(pm.response.json().status.SuccessValue, 'base64')).toString());\r",
									"\r",
									"console.log('Created token with id: ', tokenId);\r",
									"pm.collectionVariables.set(\"tokenId\", tokenId);\r",
									"\r",
									"const recentlyMinted3TokensWithPrice = pm.collectionVariables.get(\"recentlyMinted3TokensWithPrice\");\r",
									"const tokenPrice = pm.collectionVariables.get(\"tokenPrice\");\r",
									"\r",
									"if (!recentlyMinted3TokensWithPrice) {\r",
									"    pm.collectionVariables.set(\"recentlyMinted3TokensWithPrice\", JSON.stringify([[tokenId, tokenPrice]]));\r",
									"} else {\r",
									"    pm.collectionVariables.set(\r",
									"        \"recentlyMinted3TokensWithPrice\", \r",
									"        JSON.stringify([...JSON.parse(recentlyMinted3TokensWithPrice), [tokenId, tokenPrice]].slice(-3))\r",
									"    );\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"claim_token\",\r\n\t\"params\": {\r\n\t\t\"gate_id\": \"{{gateId}}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "burn_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"burn_token\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_tokens_by_owner",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{nft}}\",\r\n\t\"method\": \"get_tokens_by_owner\",\r\n\t\"params\": {\r\n\t\t\"owner_id\": \"{{alice}}\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_tokens_by_owner_and_gate_id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"get_tokens_by_owner_and_gate_id\",\r\n    \"params\": {\r\n        \"owner_id\": \"{{bob}}\",\r\n        \"gate_id\": \"{{gateId}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "batch_approve",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const r = pm.response.json();\r",
									"\r",
									"if (r.error) {\r",
									"    console.log(JSON.parse(r.error));\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"batch_approve\",\r\n\t\"params\": {\r\n\t\t\"tokens\": {{recentlyMinted3TokensWithPrice}},\r\n        \"account_id\": \"{{market}}\"\r\n\t},\r\n    \"attached_gas\": \"300000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_metadata",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_metadata\",\r\n    \"params\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_transfer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"nft_transfer\",\r\n\t\"params\": {\r\n        \"receiver_id\": \"{{alice}}\",\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"enforce_approval_id\": null,\r\n        \"memo\": \"null\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_payout",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_payout\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"balance\": \"{{tokenPrice}}\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_transfer_payout",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const payout = JSON.parse((Buffer.from(pm.response.json().status.SuccessValue, 'base64')).toString());\r",
									"\r",
									"console.log('Calculated payout: ', payout);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{alice}}\",\r\n    \"private_key\": \"{{alicePrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"nft_transfer_payout\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"receiver_id\": \"{{bob}}\",\r\n        \"balance\": \"{{tokenPrice}}\",\r\n        \"approval_id\": null,\r\n        \"memo\": null\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_token",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{nft}}\",\r\n\t\"method\": \"nft_token\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\"\r\n\t}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_approve",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"nft_approve\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"account_id\": \"{{market}}\",\r\n        \"msg\": \"{\\\"min_price\\\":\\\"{{tokenPrice}}\\\"}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_revoke",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"nft_revoke\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"account_id\": \"{{market}}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_revoke_all",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{bob}}\",\r\n    \"private_key\": \"{{bobPrivateKey}}\",\r\n    \"contract\": \"{{nft}}\",\r\n\t\"method\": \"nft_revoke_all\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_total_supply",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_total_supply\",\r\n    \"params\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_tokens",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_tokens\",\r\n    \"params\": {\r\n        \"from_index\": 15, \r\n        \"limit\": 3\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_supply_for_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_supply_for_owner\",\r\n    \"params\": {\r\n        \"account_id\": \"{{alice}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_tokens_for_owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_tokens_for_owner\",\r\n    \"params\": {\r\n        \"account_id\": \"{{alice}}\",\r\n        \"from_index\": \"10\",\r\n        \"limit\": 3\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_token_uri",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contract\": \"{{nft}}\",\r\n    \"method\": \"nft_token_uri\",\r\n    \"params\": {\r\n        \"token_id\": \"{{tokenId}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Market contract",
			"item": [
				{
					"name": "get_tokens_for_sale",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{market}}\",\r\n\t\"method\": \"get_tokens_for_sale\",\r\n\t\"params\": {}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_tokens_by_gate_id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{market}}\",\r\n\t\"method\": \"get_tokens_by_gate_id\",\r\n\t\"params\": {\r\n        \"gate_id\": \"{{gateId}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_tokens_by_owner_id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{market}}\",\r\n\t\"method\": \"get_tokens_by_owner_id\",\r\n\t\"params\": {\r\n        \"owner_id\": \"{{bob}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "get_tokens_by_creator_id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"contract\": \"{{market}}\",\r\n\t\"method\": \"get_tokens_by_creator_id\",\r\n\t\"params\": {\r\n        \"creator_id\": \"{{alice}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/view",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"view"
							]
						}
					},
					"response": []
				},
				{
					"name": "buy_token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{alice}}\",\r\n    \"private_key\": \"{{alicePrivateKey}}\",\r\n    \"contract\": \"{{market}}\",\r\n\t\"method\": \"buy_token\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"nft_id\": \"{{nft}}\"\r\n\t},\r\n    \"attached_gas\": \"300000000000000\",\r\n    \"attached_tokens\": \"{{tokenPrice}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_on_approve",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{alice}}\",\r\n    \"private_key\": \"{{alicePrivateKey}}\",\r\n    \"contract\": \"{{market}}\",\r\n\t\"method\": \"nft_on_approve\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\",\r\n        \"owner_id\": \"{{alice}}\",\r\n        \"approval_id\": \"6\",\r\n        \"msg\": \"{\\\"min_price\\\":\\\"{{tokenPrice}}\\\", \\\"gate_id\\\":\\\"{{gateId}}\\\", \\\"creator_id\\\":\\\"{{alice}}\\\"}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft_on_revoke",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"account_id\": \"{{nft}}\",\r\n    \"private_key\": \"{{nftPrivateKey}}\",\r\n    \"contract\": \"{{market}}\",\r\n\t\"method\": \"nft_on_revoke\",\r\n\t\"params\": {\r\n\t\t\"token_id\": \"{{tokenId}}\"\r\n\t},\r\n    \"attached_gas\": \"100000000000000\",\r\n    \"attached_tokens\": \"0\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/call",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"call"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "near-api-server",
			"item": [
				{
					"name": "deploy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "account_id",
									"value": "{{nft}}",
									"type": "text"
								},
								{
									"key": "private_key",
									"value": "{{nftPrivateKey}}",
									"type": "text"
								},
								{
									"key": "contract",
									"value": "{{contractFile}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/deploy",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"deploy"
							]
						}
					},
					"response": []
				},
				{
					"name": "init",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "master_account_id",
									"value": "{{nft}}",
									"type": "text"
								},
								{
									"key": "nft_contract",
									"value": "{{nft}}",
									"type": "text"
								},
								{
									"key": "server_host",
									"value": "{{serverHost}}",
									"type": "text"
								},
								{
									"key": "server_port",
									"value": "{{serverPort}}",
									"type": "text"
								},
								{
									"key": "rpc_node",
									"value": "https://rpc.testnet.near.org",
									"type": "text"
								},
								{
									"key": "private_key",
									"value": "{{nftPrivateKey}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/init",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"init"
							]
						}
					},
					"response": []
				},
				{
					"name": "create_user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomNoun}}-{{$timestamp}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/create_user",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"create_user"
							]
						}
					},
					"response": []
				},
				{
					"name": "mint_nft",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token_id",
									"value": "{{$randomUUID}}",
									"type": "text"
								},
								{
									"key": "metadata",
									"value": "{{$randomLoremSentence}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/mint_nft",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"mint_nft"
							]
						}
					},
					"response": []
				},
				{
					"name": "nft",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "token_id",
									"value": "{{tokenId}}",
									"type": "text"
								},
								{
									"key": "contract",
									"value": "{{nft-contract}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://{{serverHost}}:{{serverPort}}/nft/",
							"protocol": "http",
							"host": [
								"{{serverHost}}"
							],
							"port": "{{serverPort}}",
							"path": [
								"nft",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "nft",
			"value": "nft-1619776123729-621920"
		},
		{
			"key": "nftPrivateKey",
			"value": "ed25519:4fMjkhwLKwHVQ8RzLw819AFqubXW8TffHbe5R9KZJM21WJstoNjWDrDKFdjLkc9TqiXUfqEAUQroskZr2GAgFR6z"
		},
		{
			"key": "market",
			"value": "market-1619776142964-101433"
		},
		{
			"key": "marketPrivateKey",
			"value": "ed25519:3xvVfEmajptdri7N29NRUJuxMr4xbQJbzwhkN8kEVhr5rVhATip48by48G4zdHTZqNrRE4c7LWLknaF9TXYALMLr"
		},
		{
			"key": "alice",
			"value": "alice-1619776156483-600217"
		},
		{
			"key": "alicePrivateKey",
			"value": "ed25519:265SbCYboGnJjtUBJjDBwPH4gk6KBFzaWdXJ2GnAWPWo8miTrVZ1y6UEquQ5MRVMnZmE15oiKKTnXNGQMrYcSVWG"
		},
		{
			"key": "bob",
			"value": "bob-1619776166111-891800"
		},
		{
			"key": "bobPrivateKey",
			"value": "ed25519:4MAExZDLCRH6vREtJW7fStHzcDPqUPVKhw79HoNYxokJy4z2ACjSwk3BjFk3U2kWxuZsMk9xPPyryUgsvbuMvU91"
		},
		{
			"key": "merchant-1",
			"value": "merchant-1-1619776173227-636650"
		},
		{
			"key": "merchant-1PrivateKey",
			"value": "ed25519:2iXeb65dzWpwstiYNCh3L4zmdc9qEtG73Nh9mTskRFY5Afd9iZiPZsHtHmvnAUcFU4Zc5CqHNjGWpJrJkScUjrai"
		},
		{
			"key": "merchant-2",
			"value": "merchant-2-1619776176181-393692"
		},
		{
			"key": "merchant-2PrivateKey",
			"value": "ed25519:4xJWAEKbM381z5sP5DN8A2AHZdmSMZxrGRPcVL1VtkY3ikzSqLf7ePtG39tcbuTb6wUCp1bZxFEkySse6r6bjWrR"
		},
		{
			"key": "mintgate-fee",
			"value": "mintgate-fee-1619776179156-125526"
		},
		{
			"key": "mintgate-feePrivateKey",
			"value": "ed25519:3Tp3sdqznBJCzGJomjGWubXrckuzmj5pctPpJKGFfKS6HyfzoBk9PvA5Fxra48gnQVaotpSpYZgmdnhR5LWNbZXN"
		},
		{
			"key": "admin",
			"value": "admin-1619776182289-694761"
		},
		{
			"key": "adminPrivateKey",
			"value": "ed25519:5ZUYogPv72EDrJRWfaLAP8sDzEV34pC7aDChFDfYciA9MrEoCgMoJXyrTEwf1dfaJp3SJ9y1FTqabSe1DV4VvDiR"
		},
		{
			"key": "tokenPrice",
			"value": "5000000000000000000000000"
		},
		{
			"key": "serverHost",
			"value": "127.0.0.1"
		},
		{
			"key": "serverPort",
			"value": "3005"
		},
		{
			"key": "gateId",
			"value": ""
		},
		{
			"key": "tokenId",
			"value": ""
		},
		{
			"key": "recentlyMinted3TokensWithPrice",
			"value": ""
		}
	]
}